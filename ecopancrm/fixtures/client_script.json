[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-06-06 15:57:20.775348",
  "module": "EcopanCRM",
  "name": "button_pms",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        if (!frm.doc.__islocal) {\n            setTimeout(function() {\n                add_pms_button_to_section(frm);\n            }, 1000);\n        }\n    }\n});\n\nfunction add_pms_button_to_section(frm) {\n    let pms_wrapper = frm.fields_dict.pms_list && frm.fields_dict.pms_list.$wrapper;\n    \n    if (pms_wrapper) {\n        pms_wrapper.find('.custom-add-pms-btn').remove();\n        \n        let table_wrapper = pms_wrapper.find('.form-grid');\n        \n        if (table_wrapper.length > 0) {\n            let button_html = `\n                <div class=\"custom-add-pms-btn\" style=\"margin-bottom: 15px;\">\n                    <button class=\"btn btn-primary btn-sm\" type=\"button\">\n                        <i class=\"fa fa-plus\"></i> Aggiungi PMS\n                    </button>\n                </div>\n            `;\n            \n            table_wrapper.before(button_html);\n            \n            pms_wrapper.find('.custom-add-pms-btn button').on('click', function() {\n                frappe.new_doc('PMS', {\n                    'customer_reference': frm.doc.name,\n                    'nome_cliente': frm.doc.nome_del_cliente || frm.doc.name\n                });\n            });\n        }\n    }\n}\n\nfrappe.ui.form.on('Ecopan Customer PMS List', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:36:48.416349",
  "module": "EcopanCRM",
  "name": "timePicker",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Imposta una variabile di stato per tracciare se il pulsante è stato aggiunto\n        if (!frm.added_custom_button) {\n            frm.add_custom_button(__('Aggiungi Intervallo Orari'), function() {\n                frappe.prompt(\n                    [\n                        {\n                            fieldname: 'start_time',\n                            label: 'Da (Orario Inizio)',\n                            fieldtype: 'Time',\n                            reqd: 1\n                        },\n                        {\n                            fieldname: 'end_time',\n                            label: 'A (Orario Fine)',\n                            fieldtype: 'Time',\n                            reqd: 1\n                        }\n                    ],\n                    function(values){\n                        // Recupera il contenuto attuale del campo h_service\n                        let existing_times = frm.doc.h_service || '';\n                        // Forma la stringa del nuovo intervallo di orari\n                        let new_entry = `${values.start_time}-${values.end_time}`;\n                        // Aggiungi il nuovo intervallo di orari al campo h_service\n                        frm.set_value('h_service', existing_times ? existing_times + '; ' + new_entry : new_entry);\n                    },\n                    'Aggiungi Nuovo Intervallo',\n                    'Aggiungi'\n                );\n            })\n            .insertAfter(frm.fields_dict.h_service.$wrapper)\n            .css({'margin-top': '10px'})\n            .addClass('add-time-button'); // Aggiungi una classe CSS al pulsante\n\n            // Imposta la variabile di stato per indicare che il pulsante è stato aggiunto\n            frm.added_custom_button = true;\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:39:43.143400",
  "module": "EcopanCRM",
  "name": "Nascondi SIdebar",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.form-sidebar-stats').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.text-muted').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.new-timeline').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.comment-input-wrapper').hide();\n    }\n});\n\n\n\n\nfrappe.ui.form.on('Ecopan Customer', {\n    onload: function(frm) {\n        // Crea un MutationObserver per monitorare i cambiamenti nel DOM\n        const observer = new MutationObserver(function(mutations) {\n            mutations.forEach(function(mutation) {\n                if (mutation.addedNodes.length) {\n                    $(mutation.addedNodes).each(function() {\n                        // Nasconde il pulsante 'Sposta'\n                        $(this).find('button.grid-move-row').hide();\n                        // Nasconde il pulsante 'Inserisci Sotto'\n                        $(this).find('button.grid-insert-row-below').hide();\n                         $(this).find('button.grid-insert-row').hide();\n                          $(this).find('button.grid-duplicate-row').hide();\n                    });\n                }\n            });\n        });\n\n        // Inizia l'osservazione sul wrapper del form\n        observer.observe(frm.$wrapper[0], {\n            childList: true,\n            subtree: true\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan DVR",
  "enabled": 1,
  "modified": "2024-10-09 10:52:09.335948",
  "module": "EcopanCRM",
  "name": "DVR UI",
  "script": "\n\n//nascondere campi\nfrappe.ui.form.on('Ecopan DVR', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.form-sidebar-stats').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan DVR', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.text-muted').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan DVR', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.new-timeline').hide();\n    }\n});\n\nfrappe.ui.form.on('Ecopan DVR', {\n    onload: function(frm) {\n        // Nasconde la sidebar\n        frm.$wrapper.find('.comment-input-wrapper').hide();\n    }\n});\n\n\n\n\nfrappe.ui.form.on('Ecopan DVR', {\n    onload: function(frm) {\n        // Crea un MutationObserver per monitorare i cambiamenti nel DOM\n        const observer = new MutationObserver(function(mutations) {\n            mutations.forEach(function(mutation) {\n                if (mutation.addedNodes.length) {\n                    $(mutation.addedNodes).each(function() {\n                        // Nasconde il pulsante 'Sposta'\n                        $(this).find('button.grid-move-row').hide();\n                        // Nasconde il pulsante 'Inserisci Sotto'\n                        $(this).find('button.grid-insert-row-below').hide();\n                         $(this).find('button.grid-insert-row').hide();\n                          $(this).find('button.grid-duplicate-row').hide();\n                    });\n                }\n            });\n        });\n\n        // Inizia l'osservazione sul wrapper del form\n        observer.observe(frm.$wrapper[0], {\n            childList: true,\n            subtree: true\n        });\n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan DVR",
  "enabled": 0,
  "modified": "2024-10-09 12:11:04.254792",
  "module": "EcopanCRM",
  "name": "Employee DVR",
  "script": "frappe.ui.form.on('Ecopan DVR', {\n    refresh: function(frm) {\n        frm.add_custom_button(__('Import Dipendente'), function() {\n            open_white_popup(frm);\n        }, 'Actions');\n    }\n});\n\nfunction open_white_popup(frm) {\n    let dialog = new frappe.ui.Dialog({\n        title: __('Import Dipendente'),\n        fields: [\n            {\n                fieldtype: 'Table',\n                label: __('Dipendenti'),\n                fieldname: 'employees_table',\n                options: 'Ecopan Employee', // Nome del Doctype per la tabella\n                reqd: 1\n            }\n        ],\n        buttons: [\n            {\n                label: __('RSPP'),\n                cssClass: 'btn-primary',\n                action: function() {\n                    handle_employee_selection(frm, dialog.get_value('employees_table'), 'RSPP');\n                }\n            },\n            {\n                label: __('ASPP'),\n                cssClass: 'btn-primary',\n                action: function() {\n                    handle_employee_selection(frm, dialog.get_value('employees_table'), 'ASPP');\n                }\n            },\n            {\n                label: __('Medico Competente'),\n                cssClass: 'btn-primary',\n                action: function() {\n                    handle_employee_selection(frm, dialog.get_value('employees_table'), 'Medico Competente');\n                }\n            },\n            {\n                label: __('Datore di Lavoro'),\n                cssClass: 'btn-primary',\n                action: function() {\n                    handle_employee_selection(frm, dialog.get_value('employees_table'), 'Datore di Lavoro');\n                }\n            },\n            {\n                label: __('RLS'),\n                cssClass: 'btn-primary',\n                action: function() {\n                    handle_employee_selection(frm, dialog.get_value('employees_table'), 'RLS');\n                }\n            },\n            {\n                label: __('Close'),\n                cssClass: 'btn-secondary',\n                action: function() {\n                    dialog.hide();\n                }\n            }\n        ]\n    });\n\n    // Applicare uno stile bianco al popup\n    dialog.$wrapper.find('.modal-dialog').css({\n        'background-color': '#ffffff',\n        'padding': '20px',\n        'border-radius': '8px'\n    });\n\n    // Popola la tabella dei dipendenti\n    populate_employee_table(frm, dialog);\n\n    dialog.show();\n}\n\nfunction populate_employee_table(frm, dialog) {\n    // Ottieni il Doctype Ecopan Customer con i dati collegati\n    frappe.db.get_doc('Ecopan Customer', frm.doc.client).then(doc => {\n        console.log(\"Dati del cliente ottenuti:\", doc);\n\n        // Controlla se ci sono dipendenti (tabella figlia) per il cliente\n        if (doc.dipendenti && doc.dipendenti.length > 0) {\n            // Aggiungi i dipendenti alla tabella nel dialog\n            let employees = [];\n            doc.dipendenti.forEach(emp => {\n                employees.push({\n                    first_name: emp.first_name,\n                    last_name: emp.last_name,\n                    designation: emp.designation,\n                    selected: false // Aggiungi un campo per il flag\n                });\n                console.log(\"Aggiunto dipendente:\", emp.first_name, emp.last_name);\n            });\n\n            dialog.set_values({ employees_table: employees }); // Popola la tabella con i dipendenti\n        } else {\n            console.log(\"Nessun dipendente trovato per questo cliente.\");\n        }\n    }).catch(err => {\n        console.error(\"Errore durante il recupero del cliente:\", err);\n    });\n}\n\nfunction handle_employee_selection(frm, selected_employees, category) {\n    const selected = selected_employees.filter(emp => emp.selected);\n    if (selected.length > 0) {\n        // Logica per gestire i dipendenti selezionati per la categoria\n        console.log(`Dipendenti selezionati per ${category}:`, selected);\n        // Puoi aggiungere la logica per inserire i dati nel Doctype 'Ecopan DVR' o eseguire altre azioni\n    } else {\n        frappe.msgprint(__('Nessun dipendente selezionato per la categoria: ') + category);\n    }\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan DVR",
  "enabled": 0,
  "modified": "2024-12-13 13:35:20.378924",
  "module": "EcopanCRM",
  "name": "Button DVR",
  "script": "frappe.ui.form.on('Ecopan DVR', {\n    refresh: function(frm) {\n        // Aggiungi il pulsante per mostrare i dipendenti collegati al cliente\n        frm.add_custom_button(__('Importa Dipendenti'), function() {\n            // Controlla se il campo 'client' è selezionato\n            if (frm.doc.client) {\n                console.log('Cliente selezionato:', frm.doc.client); // Log del cliente selezionato\n             \n                // Chiamata server-side per ottenere i dipendenti collegati al cliente\n                frappe.call({\n                    method: 'imp_employee',  // Specifica il percorso completo\n                    args: {\n                        customer: frm.doc.client // La variabile da mandare al server\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            // Accedi ai dati qui\n                            console.log('Dipendenti recuperati:', r.message); // Log dei dipendenti recuperati\n                            \n                            var employees = r.message;\n\n                            // Aggiungi le informazioni del parent\n                            var parentInfo = `\n                                <div>\n                                    <strong>${__('Dettagli del Documento Parent:')}</strong>\n                                    <p><strong>Nome:</strong> ${frm.doc.name}</p>\n                                    <p><strong>Cliente:</strong> ${frm.doc.client}</p>\n                                    <p><strong>Data:</strong> ${frm.doc.date}</p>\n                                    <!-- Aggiungi qui altri campi del parent se necessario -->\n                                </div>\n                                <hr/>\n                            `;\n                            \n                            var html = parentInfo + '<table class=\"table table-bordered\"><thead><tr><th>Seleziona</th><th>Nome</th><th>Ruolo</th></tr></thead><tbody>';\n                            \n                            employees.forEach(function(emp) {\n                                html += `\n                                    <tr>\n                                        <td><input type=\"checkbox\" class=\"employee-checkbox\" data-employee-name=\"${emp.first_name}_${emp.last_name}\"></td>\n                                        <td>${emp.first_name}  ${emp.last_name} </td>\n                            \n                                        <td>${emp.gender}</td>\n                                    </tr>\n                                `;\n                            });\n                            \n                            html += '</tbody></table>';\n                            \n                            // Aggiungi il menu a tendina e il bottone\n                            var dropdownHtml = `\n                                <div class=\"form-group\">\n                                    <label>${__('Seleziona un’opzione')}</label>\n                                    <div class=\"input-group\">\n                                        <select class=\"form-control\" id=\"dropdown-options\">\n                                            <option value=\"RSPP\">${__('RSPP')}</option>\n                                            <option value=\"ASPP\">${__('ASPP')}</option>\n                                            <option value=\"RLS\">${__('RLS')}</option>\n                                            <option value=\"COMPANYDOCTOR\">${__('Medico Competente')}</option>\n                                            <option value=\"BOSS\">${__('Datore di Lavoro')}</option>\n                                            <option value=\"TERMINAL\">${__('Utente Terminali')}</option>\n                                        </select>\n                                        <div class=\"input-group-append\">\n                                            <button class=\"btn btn-primary\" id=\"action-button\">${__('Esegui')}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            `;\n                            \n                            // Mostra il messaggio con la tabella e il menu a tendina\n                            frappe.msgprint({\n                                title: __('Dipendenti'),\n                                indicator: 'blue',\n                                message: html + dropdownHtml\n                            });\n\n\n                        } else {\n                            console.error('Nessun dipendente trovato per il cliente:', frm.doc.client); // Log di errore se non ci sono dipendenti\n                        }\n                    }\n                });\n\n\n // Gestisci il click del pulsante\n\n                            $(document).off('click.actionbutton').on('click.actionbutton', '#action-button', function() {\n                                \n                                var selectedOption = $('#dropdown-options').val();\n                                var selectedEmployees = [];\n                                \n                                // Raccogli i nomi dei dipendenti selezionati\n                                $('.employee-checkbox:checked').each(function() {\n                                    selectedEmployees.push($(this).data('employee-name'));\n                                });\n\n                              //  console.log('Opzione selezionata:', selectedOption); // Log dell'opzione selezionata\n                                //console.log('Dipendenti selezionati:', selectedEmployees); // Log dei dipendenti selezionati\n                                \n                                // Chiamata server-side con i dati selezionati\n                                frappe.call({\n                                    method: 'imp_employee_data', // Specifica il percorso completo dello script\n                                    args: {\n                                        option: selectedOption,\n                                        employees: selectedEmployees,\n                                        parent: frm.doc.name\n                                    },\n                                    callback: function(response) {\n                                        console.log('Risposta dalla chiamata server:', response); // Log della risposta dal server\n                                        if (response.message) {\n                                            frappe.msgprint(__('Operazione completata con successo!'));\n                                            \n                                          // frm.refresh(); \n                                           frm.reload_doc(); \n                                           //Controllare la pulizia cache ???\n                                           \n                                                                       // Chiudi il pop-up dopo qualche secondo (es. 2 secondi)\n                                            setTimeout(function() {\n                                                frappe.hide_msgprint();\n                                                        // Ricarica la pagina\n                                            //location.reload();\n                                            }, 700);\n                                            \n                                        } else {\n                                            frappe.msgprint(__('Si è verificato un errore.'));\n                                        }\n                                    }\n                                });\n                            });\n\n\n            } else {\n                frappe.msgprint(__('Seleziona un cliente prima di visualizzare i dipendenti'));\n            }\n        });\n    }\n});\n\n\n                           ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:38:18.773148",
  "module": "EcopanCRM",
  "name": "Cnt_Employee",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    // Trigger when the form is loaded or refreshed\n    refresh: function(frm) {\n        update_employee_count(frm);\n    },\n    // Trigger when rows are added, removed, or modified in the child table\n    table_dipendenti_on_form_rendered: function(frm) {\n        update_employee_count(frm);\n    },\n    table_dipendenti_remove: function(frm) {\n        update_employee_count(frm);\n    }\n});\n\n// Function to update employee_count\nfunction update_employee_count(frm) {\n    let employee_count = frm.doc.dipendenti.length;\n    frm.set_value('employee_count', employee_count);\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2024-12-18 20:17:14.693272",
  "module": "EcopanCRM",
  "name": "Elenco_Dip",
  "script": "frappe.ui.form.on(\"Ecopan Customer\", {\n    refresh(frm) {\n        frm.trigger(\"set_options_for_reports_to\");\n    },\n    set_options_for_reports_to(frm) {\n        const employee_names = frm.doc.dipendenti.map((employee) => employee.first_name);\n        frm.fields_dict[\"dipendenti\"].grid.update_docfield_property(\"reports_to\", \"options\", employee_names.join(\"\\n\"));\n    }\n});\n\n// Child table script\nfrappe.ui.form.on(\"Ecopan Employee\", {\n    first_name(frm) {\n        frm.trigger(\"set_options_for_reports_to\");\n    },\n    table_dipendenti_add(frm) {\n        frm.trigger(\"set_options_for_reports_to\");\n    },\n    table_dipendenti_remove(frm) {\n        frm.trigger(\"set_options_for_reports_to\");\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan DVR",
  "enabled": 1,
  "modified": "2024-12-20 14:25:11.311835",
  "module": "EcopanCRM",
  "name": "List_Branch",
  "script": "frappe.ui.form.on('Ecopan DVR', {\n    refresh: function(frm) {\n            if (!frm.is_new()) {\n            frm.set_df_property('client', 'read_only', 1);\n            }\n        \n        // Controlla se il campo client è già compilato quando viene caricato il form\n        if (frm.doc.client) {\n           // console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    },\n    client: function(frm) {\n        // Quando il campo client viene selezionato o cambia\n        if (frm.doc.client) {\n          //  console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    }\n});\n\nfunction fetch_branches(frm) {\n    frappe.call({\n        method: 'list_branch',  // Assicurati di avere il percorso corretto se necessario\n        args: {\n            client: frm.doc.client\n        },\n        callback: function(response) {\n            var branches = response.message;\n         //  console.log(response.opt);\n\n            if (branches) {\n                let options = branches.map(branch => branch.branch_name).join(\"\\n\");\n                frm.set_df_property('branch', 'options', options);  // Imposta le opzioni del campo 'branch'\n              \n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Formazione Dipendente",
  "enabled": 0,
  "modified": "2024-11-29 00:52:00.697158",
  "module": "EcopanCRM",
  "name": "List_Employee",
  "script": "frappe.ui.form.on('Ecopan Formazione', {\n    refresh(frm) {\n        if (frm.doc.codice_azienda) {\n            console.log(\"Codice azienda selezionato: \" + frm.doc.codice_azienda);\n            fetch_employee(frm);\n        }\n    },\n    codice_azienda(frm) {\n        if (frm.doc.codice_azienda) {\n            console.log(\"Codice azienda selezionato: \" + frm.doc.codice_azienda);\n            fetch_employee(frm);\n        }\n    }\n});\n\nfunction fetch_employee(frm) {\n    frappe.call({\n        method: 'list_employee',  // Sostituisci con il percorso esatto\n        args: {\n            codice_azienda: frm.doc.codice_azienda\n        },\n        callback: function(response) {\n            var employees = response.message;\n\n            if (employees) {\n    console.log(\"Risposta dal metodo server-side list_employee:\", response.message); // Logga la risposta\n\n                let options = employees.map(emp => emp.first_name + \" \" + emp.last_name).join(\"\\n\");\n                \n                frm.set_df_property('nome_dipendente', 'options', options);  // Imposta le opzioni nel campo 'nome_dipendente'\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:40:39.576751",
  "module": "EcopanCRM",
  "name": "Customer_DVR_View",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n\trefresh(frm) {\n\t // Chiamata API al Server Script\n        frappe.call({\n            method: 'DVR_View',\n            args: { client: frm.doc.name }, // Passa il nome del documento come argomento\n             callback: function (r) {\n                if (r.message) {\n                    console.log('Campi disponibili:', frm.fields_dict);\n                    console.log('Dati ricevuti dal server:', r.message);\n                    // Converte i dati in una tabella HTML\n                    const table = `\n                    <a href=\"/app/ecopan-dvr/new-ssp?client=${encodeURIComponent(frm.doc.name)}\" \n                           class=\"btn btn-primary\" \n                           style=\"margin-bottom: 10px;\">\n                            Crea Nuova DVR\n                        </a>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>N° DVR</th>\n                                    <th>Data Creazione</th>\n                                    <th>Data Revisione</th>\n                                    <th>Sede</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ${r.message.map(row => `\n                                    <tr>\n                                         <tr>\n                                        <td><b><a href=\"/app/ecopan-dvr/${row.name}\" target=\"_blank\">\n                                                ${row.name || 'N/A'}\n                                            </a></b></td>\n                                        <td>${row.creation_date}</td>\n                                        <td>${row.expiry_date}</td>\n                                        <td>${row.branch}</td>\n                                    </tr>\n                                `).join('')}\n                            </tbody>\n                        </table>\n                    `;\n\n                    // Inserisci la tabella in un campo HTML\n                   frm.fields_dict['vista_html_dvr'].$wrapper.html(table);\n                } else {\n                    frm.fields_dict['vista_html_dvr'].html('<p>Nessun dato trovato.</p>');\n                }\n            }\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:41:43.260489",
  "module": "EcopanCRM",
  "name": "Customer_SPP_View",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n\trefresh(frm) {\n\t // Chiamata API al Server Script\n        frappe.call({\n            method: 'SPP_View',\n            args: { client: frm.doc.name }, // Passa il nome del documento come argomento\n             callback: function (r) {\n                if (r.message) {\n                    console.log('Campi disponibili:', frm.fields_dict);\n                    console.log('Dati ricevuti dal server:', r.message);\n                    // Converte i dati in una tabella HTML\n                    const table = `\n                        <a href=\"/app/ecopan-ssp/new-ssp?client=${encodeURIComponent(frm.doc.name)}\" \n                           class=\"btn btn-primary\" \n                           style=\"margin-bottom: 10px;\">\n                            Crea Nuova SSP\n                        </a>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>N° SSP</th>\n                                    <th>Data Creazione</th>\n                                    <th>Data Revisione</th>\n                                    <th>Sede</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ${r.message.map(row => `\n                                    <tr>\n                                        <td><b><a href=\"/app/ecopan-ssp/${row.name}\" target=\"_blank\">\n                                                ${row.name || 'N/A'}\n                                            </a></b></td>\n                                        <td>${row.creation_date}</td>\n                                        <td>${row.expiry_date}</td>\n                                        <td>${row.branch}</td>\n                                    </tr>\n                                `).join('')}\n                            </tbody>\n                        </table>\n                    `;\n\n                    // Inserisci la tabella in un campo HTML\n                   frm.fields_dict['vista_html_spp'].$wrapper.html(table);\n                } else {\n                    frm.fields_dict['vista_html_spp'].html('<p>Nessun dato trovato.</p>');\n                }\n            }\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan SSP",
  "enabled": 1,
  "modified": "2024-12-20 14:26:06.582720",
  "module": "EcopanCRM",
  "name": "List_Branch_SSP",
  "script": "frappe.ui.form.on('Ecopan SSP', {\n\n    refresh: function(frm) {\n        if (!frm.is_new()) {\n                frm.set_df_property('client', 'read_only', 1);\n                }\n        // Controlla se il campo client è già compilato quando viene caricato il form\n        if (frm.doc.client) {\n           // console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    },\n    client: function(frm) {\n        // Quando il campo client viene selezionato o cambia\n        if (frm.doc.client) {\n          //  console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    }\n});\n\nfunction fetch_branches(frm) {\n    frappe.call({\n        method: 'list_branch',  // Assicurati di avere il percorso corretto se necessario\n        args: {\n            client: frm.doc.client\n        },\n        callback: function(response) {\n            var branches = response.message;\n         //  console.log(response.opt);\n\n            if (branches) {\n                let options = branches.map(branch => branch.branch_name).join(\"\\n\");\n                frm.set_df_property('branch', 'options', options);  // Imposta le opzioni del campo 'branch'\n              \n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2025-03-10 12:51:43.430475",
  "module": "EcopanCRM",
  "name": "Filter Dipendenti",
  "script": "/*frappe.ui.form.on('Ecopan Customer', {\n    onload: function (frm) {\n        if (!frm.filter_area) {\n            frm.filter_area = $('<div class=\"filter-area\"></div>').prependTo(frm.fields_dict.dipendenti.wrapper);\n\n            // Aggiungi i controlli per il filtro\n            frm.filter_area.append(`\n                <h5 style=\"color: #9a9999;\">Filtri per dipendenti</h5>                <input type=\"text\" placeholder=\"Nome\" class=\"filter-first-name form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                <input type=\"text\" placeholder=\"Cognome\" class=\"filter-last-name form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                <input type=\"text\" placeholder=\"Titolo di lavoro\" class=\"filter-job-title form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                <select class=\"filter-status form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                    <option value=\"\">Stato</option>\n                    <option value=\"Active\" selected>Active</option>\n                    <option value=\"Inactive\">Inactive</option>\n                </select>\n                <button class=\"btn btn-primary apply-filters\">Applica Filtri</button>\n                <button class=\"btn btn-secondary clear-filters\">Rimuovi Filtri</button>\n                <hr style=\"border: 1px solid #f3f3f3; width: 100%;\">\n                \n            `);\n\n            // Salva una copia dei dati originali (Attenzione i filtri danno errore se non viene abilitato la memorizzazione della tabella **trovare altenative**)\n            frm.original_dipendenti_data = [...(frm.fields_dict.dipendenti.grid.data || [])];\n\n            // Funzione per filtrare i dati\n            const apply_filters = () => {\n                const first_name_filter = frm.filter_area.find('.filter-first-name').val().toLowerCase();\n                const last_name_filter = frm.filter_area.find('.filter-last-name').val().toLowerCase();\n                const job_title_filter = frm.filter_area.find('.filter-job-title').val().toLowerCase();\n                const status_filter = frm.filter_area.find('.filter-status').val();\n\n                // Filtra i dati\n                const filtered_data = frm.original_dipendenti_data.filter(row => {\n                    const match_first_name = first_name_filter ? row.first_name?.toLowerCase().includes(first_name_filter) : true;\n                    const match_last_name = last_name_filter ? row.last_name?.toLowerCase().includes(last_name_filter) : true;\n                    const match_job_title = job_title_filter ? row.current_job_title?.toLowerCase().includes(job_title_filter) : true;\n                    const match_status = status_filter ? row.employment_status === status_filter : true;\n\n                    return match_first_name && match_last_name && match_job_title && match_status;\n                });\n\n                // Aggiorna la tabella con i dati filtrati\n                frm.clear_table(\"dipendenti\");\n                filtered_data.forEach(row => {\n                    let new_row = frm.add_child(\"dipendenti\");\n                    new_row.first_name = row.first_name;\n                    new_row.last_name = row.last_name;\n                    new_row.current_job_title = row.current_job_title;\n                    new_row.employment_status = row.employment_status;\n                });\n\n                frm.refresh_field(\"dipendenti\");\n                console.log(\"Filtri applicati:\", filtered_data);\n            };\n\n            // Applica automaticamente il filtro \"Active\" all'onload\n            apply_filters();\n\n            // Eventi per i pulsanti\n            frm.filter_area.find('.apply-filters').on('click', apply_filters);\n\n            frm.filter_area.find('.clear-filters').on('click', function () {\n                // Ripristina i dati originali\n                frm.clear_table(\"dipendenti\");\n                frm.original_dipendenti_data.forEach(row => {\n                    let new_row = frm.add_child(\"dipendenti\");\n                    new_row.first_name = row.first_name;\n                    new_row.last_name = row.last_name;\n                    new_row.current_job_title = row.current_job_title;\n                    new_row.employment_status = row.employment_status;\n                });\n\n                frm.refresh_field(\"dipendenti\");\n                console.log(\"Filtri rimossi, dati originali ripristinati.\");\n\n                // Resetta i campi di filtro\n                frm.filter_area.find('input, select').val('');\n            });\n        }\n    }\n});*/\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan SSP",
  "enabled": 1,
  "modified": "2024-12-09 10:59:35.881410",
  "module": "EcopanCRM",
  "name": "Insert_Nome_cliente",
  "script": "frappe.ui.form.on('Ecopan SSP', {\n    after_save: function(frm) {\n        console.log(\"after_save triggered\"); // Debug iniziale\n        if (frm.doc.client) {\n            console.log(\"Client field value:\", frm.doc.client); // Verifica il valore di client\n            \n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Ecopan Customer',\n                    name: frm.doc.client\n                },\n                callback: function(r) {\n                    console.log(\"frappe.call response:\", r); // Log della risposta\n                    if (r.message) {\n                        console.log(\"Customer Name retrieved:\", r.message.customer_name); // Verifica il valore recuperato\n                        \n                        // Aggiorna il campo\n                        frm.set_value('customer_name', r.message.customer_name);\n\n                        // Salva nuovamente il documento\n                        frm.save();\n                    } else {\n                        console.error(\"No message in response or customer not found\"); // Log di errore\n                    }\n                },\n                error: function(err) {\n                    console.error(\"Error in frappe.call:\", err); // Log degli errori\n                }\n            });\n        } else {\n            console.error(\"Client field is empty\"); // Log nel caso il campo client sia vuoto\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-04-07 15:52:19.245891",
  "module": "EcopanCRM",
  "name": "Form_Formazione",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        console.log(\"Caricamento 'Ecopan Customer'...\");\n\n        let wrapper = frm.fields_dict['file1_formazione'] ? frm.fields_dict['file1_formazione'].$wrapper : null;\n        let wrapperV = frm.fields_dict['file1_visite'] ? frm.fields_dict['file1_visite'].$wrapper : null;\n\n        // Funzione per popolare il campo select dei dipendenti\n        function populateEmployeeSelect(wrapper, selectId) {\n            frappe.call({\n                method: 'list_employee',\n                args: { codice_azienda: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        let select = wrapper.find(selectId);\n                        r.message.forEach(function(dipendente) {\n                            // Aggiungi sia name che parent come valore dell'option\n                            select.append(`<option value=\"${dipendente.name}|${dipendente.parent}\">${dipendente.first_name} ${dipendente.last_name}</option>`);\n                        });\n                    }\n                }\n            });\n        }\n\n        // Aggiungi il form 'file1_formazione'\n        if (wrapper) {\n            console.log(\"Campo 'file1_formazione' trovato.\");\n            if (wrapper.find('form').length === 0) {\n                console.log(\"Form HTML non trovato, lo stiamo aggiungendo.\");\n                wrapper.html(`\n                    <form id=\"form_formazione\">\n                        <div>\n                            <button type=\"button\" id=\"salva_formazione\" class=\"btn btn-primary\">Salva</button>\n                        </div> \n\n                        <div style=\"padding: 15px;\">\n                            <h2>Formazione</h2>\n                            <div>\n                                <label for=\"corso_formazione\">Corso Formazione:</label>\n                                <select id=\"corso_formazione\" class=\"form-control\">\n                                    <option value=\"\" disabled selected>Seleziona un corso</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label for=\"formazione_ecopan\">Formazione Ecopan:</label>\n                                <input type=\"checkbox\" id=\"formazione_ecopan\">\n                            </div>\n                            <div>\n                                <label for=\"data_formazione\">Data Formazione:</label>\n                                <input type=\"date\" id=\"data_formazione\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"data_scadenza\">Data Scadenza:</label>\n                                <input type=\"date\" id=\"data_scadenza\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"descrizione\">Descrizione:</label>\n                                <textarea id=\"descrizione\" class=\"form-control\" rows=\"3\" placeholder=\"Descrizione della formazione\"></textarea>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"dipendenti_formazione\">Dipendenti:</label>\n                            <select id=\"dipendenti_formazione\" class=\"form-control\" multiple>\n                                <option value=\"\" disabled>Seleziona i dipendenti</option>\n                            </select>\n                        </div>\n                    </form>\n                `);\n            } else {\n                console.log(\"Il form HTML è già stato aggiunto.\");\n            }\n\n            // Popola il campo select con i corsi disponibili dal Doctype 'Ecopan Formazione Corsi'\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: 'Ecopan Formazione Corsi',\n                    fields: ['name']\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        let select = wrapper.find('#corso_formazione');\n                        r.message.forEach(function(corso) {\n                            select.append(`<option value=\"${corso.name}\">${corso.name}</option>`);\n                        });\n                    }\n                }\n            });\n\n            // Popola il campo select dei dipendenti\n            populateEmployeeSelect(wrapper, '#dipendenti_formazione');\n\n            // Gestisce il click sul pulsante Salva\n            wrapper.find('#salva_formazione').on('click', function() {\n                let corso_formazione = wrapper.find('#corso_formazione').val();\n                let formazione_ecopan = wrapper.find('#formazione_ecopan').is(':checked');\n                let data_formazione = wrapper.find('#data_formazione').val();\n                let data_scadenza = wrapper.find('#data_scadenza').val();\n                let descrizione = wrapper.find('#descrizione').val();\n                let dipendenti_selezionati = wrapper.find('#dipendenti_formazione').val();\n\n                if (!corso_formazione || !data_formazione|| !data_scadenza || dipendenti_selezionati.length === 0) {\n                    frappe.msgprint(__('Seleziona un corso, dipendenti e inserisci una data!'));\n                    return;\n                }\n\n                // Gestione del valore separato\n                let dipendenti_info = dipendenti_selezionati.map(function(dipendente) {\n                    // Separazione di name e parent\n                    let [name, parent] = dipendente.split('|');\n                    return { name, parent }; // Restituisce un oggetto con name e parent\n                });\n\n                // Salvataggio\n                frappe.call({\n                    method: 'insert_visit_formazione',\n                    args: {\n                        fun: 'formazione',\n                        corso_formazione: corso_formazione,\n                        formazione_ecopan: formazione_ecopan,\n                        data_formazione: data_formazione,\n                        data_scadenza: data_scadenza,\n                        descrizione: descrizione,\n                        dipendenti_selezionati: dipendenti_info // Passa array di oggetti\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            frappe.msgprint(__('Dati salvati con successo!'));\n                            frm.refresh();\n                        }\n                    }\n                });\n            });\n        } else {\n            console.log(\"Campo 'file1_formazione' non trovato.\");\n        }\n\n        // Aggiungi il form 'file1_visite'\n        if (wrapperV) {\n            console.log(\"Campo 'file1_visite' trovato.\");\n            if (wrapperV.find('form').length === 0) {\n                console.log(\"Form HTML non trovato, lo stiamo aggiungendo.\");\n                wrapperV.html(`\n                    <form id=\"form_visite\">\n                        <div>\n                            <button type=\"button\" id=\"salva_visite\" class=\"btn btn-primary\">Salva</button>\n                        </div> \n\n                        <div style=\"padding: 15px;\">\n                            <h2>Visita Medica</h2>\n                            <div>\n                                <label for=\"data_visita\">Data Visita:</label>\n                                <input type=\"date\" id=\"data_visita\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"data_scadenza\">Data Scadenza:</label>\n                                <input type=\"date\" id=\"data_scadenza\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"annotazioni_visita\">Annotazioni Visita:</label>\n                                <textarea id=\"annotazioni_visita\" class=\"form-control\" rows=\"3\" placeholder=\"Annotazioni\"></textarea>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"dipendenti_visite\">Dipendenti:</label>\n                            <select id=\"dipendenti_visite\" class=\"form-control\" multiple>\n                                <option value=\"\" disabled>Seleziona i dipendenti</option>\n                            </select>\n                        </div>\n                    </form>\n                `);\n            } else {\n                console.log(\"Il form HTML è già stato aggiunto.\");\n            }\n\n            // Popola il campo select dei dipendenti\n            populateEmployeeSelect(wrapperV, '#dipendenti_visite');\n\n            // Gestisce il click sul pulsante Salva\n            wrapperV.find('#salva_visite').on('click', function() {\n                let data_visita = wrapperV.find('#data_visita').val();\n                let data_scadenza = wrapperV.find('#data_scadenza').val();\n                let annotazioni_visita = wrapperV.find('#annotazioni_visita').val();\n                let dipendenti_selezionati = wrapperV.find('#dipendenti_visite').val();\n\n                if (!data_visita || !data_scadenza || dipendenti_selezionati.length === 0) {\n                    frappe.msgprint(__('Seleziona dipendenti e inserisci le date!'));\n                    return;\n                }\n\n                // Gestione del valore separato\n                let dipendenti_info = dipendenti_selezionati.map(function(dipendente) {\n                    // Separazione di name e parent\n                    let [name, parent] = dipendente.split('|');\n                    return { name, parent }; // Restituisce un oggetto con name e parent\n                });\n\n                // Salvataggio\n                frappe.call({\n                    method: 'insert_visit_formazione',\n                    args: {\n                        fun: 'visite',\n                        data_visita: data_visita,\n                        data_scadenza: data_scadenza,\n                        annotazioni_visita: annotazioni_visita,\n                        dipendenti_selezionati: dipendenti_info // Passa array di oggetti\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            frappe.msgprint(__('Visita salvata con successo!'));\n                            frm.refresh();\n                        }\n                    }\n                });\n            });\n        } else {\n            console.log(\"Campo 'file1_visite' non trovato.\");\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-04-07 15:43:16.324924",
  "module": "EcopanCRM",
  "name": "Form_Visite_Formazione",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        console.log(\"Caricamento 'Ecopan Customer'...\");\n\n        let wrapper = frm.fields_dict['file_formazione'] ? frm.fields_dict['file_formazione'].$wrapper : null;\n        let wrapperV = frm.fields_dict['file_visite'] ? frm.fields_dict['file_visite'].$wrapper : null;\n\n        // Funzione per popolare la tabella dei dipendenti\n        function populateEmployeeTable(wrapper, tableId, filtroId) {\n            frappe.call({\n                method: 'list_employee',\n                args: { codice_azienda: frm.doc.name },\n                callback: function(r) {\n                    if (r.message) {\n                        let tbody = wrapper.find(tableId).find('tbody');\n                        tbody.html(''); // Pulisce eventuali dati precedenti\n                        r.message.forEach(function(dipendente) {\n                            tbody.append(`\n                                <tr data-name=\"${dipendente.name}\" data-parent=\"${dipendente.parent}\">\n                                    <td><input type=\"checkbox\" class=\"seleziona-dipendente\" value=\"${dipendente.name}\"></td>\n                                    <td>${dipendente.first_name}</td>\n                                    <td>${dipendente.last_name}</td>\n                                </tr>\n                            `);\n                        });\n\n                        // Filtro dipendenti\n                        wrapper.find(filtroId).on('input', function() {\n                            let filtro = $(this).val().toLowerCase();\n                            tbody.find('tr').each(function() {\n                                let nome = $(this).find('td:nth-child(2)').text().toLowerCase();\n                                let cognome = $(this).find('td:nth-child(3)').text().toLowerCase();\n                                $(this).toggle(nome.includes(filtro) || cognome.includes(filtro));\n                            });\n                        });\n                    }\n                }\n            });\n        }\n\n        // Aggiungi il form 'file_formazione'\n        if (wrapper) {\n            console.log(\"Campo 'file_formazione' trovato.\");\n            if (wrapper.find('form').length === 0) {\n                console.log(\"Form HTML non trovato, lo stiamo aggiungendo.\");\n                wrapper.html(`\n                    <form id=\"form_formazione\">\n                        <div>\n                            <button type=\"button\" id=\"salva_formazione\" class=\"btn btn-primary\">Salva</button>\n                        </div> \n\n                        <div style=\"padding: 15px;\">\n                            <h2>Formazione</h2>\n                            <div>\n                                <label for=\"corso_formazione\">Corso Formazione:</label>\n                                <select id=\"corso_formazione\" class=\"form-control\">\n                                    <option value=\"\" disabled selected>Seleziona un corso</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label for=\"formazione_ecopan\">Formazione Ecopan:</label>\n                                <input type=\"checkbox\" id=\"formazione_ecopan\">\n                            </div>\n                            <div>\n                                <label for=\"data_formazione\">Data Formazione:</label>\n                                <input type=\"date\" id=\"data_formazione\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"data_scadenza\">Data Scadenza:</label>\n                                <input type=\"date\" id=\"data_scadenza\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"descrizione\">Descrizione:</label>\n                                <textarea id=\"descrizione\" class=\"form-control\" rows=\"3\" placeholder=\"Descrizione della formazione\"></textarea>\n                            </div>\n                        </div>\n\n                        <div> \n                            <div>\n                                <label for=\"filtro_dipendenti\">Filtro Dipendenti:</label>\n                                <input type=\"text\" id=\"filtro_dipendenti\" class=\"form-control\" placeholder=\"Filtra per nome o cognome\">\n                            </div>\n                            <label>Dipendenti:</label>\n                            <table id=\"tabella_dipendenti\" class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>Seleziona</th>\n                                        <th>Nome</th>\n                                        <th>Cognome</th>\n                                    </tr>\n                                </thead>\n                                <tbody></tbody>\n                            </table>\n                        </div>\n                    </form>\n                `);\n            } else {\n                console.log(\"Il form HTML è già stato aggiunto.\");\n            }\n\n            // Popola il campo select con i corsi disponibili dal Doctype 'Ecopan Formazione Corsi'\n\n                frappe.call({\n                method: 'get_list_custom', // Sostituisci con il percorso corretto del tuo server script\n                args: {\n                    doctype: 'Ecopan Formazione Corsi' // Passa il doctype corretto al server script\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        let select = $('#corso_formazione'); // Assicurati che l'ID sia corretto\n                     \n        \n                        r.message.forEach(function(corso) {\n                            select.append(`<option value=\"${corso.name}\">${corso.name}</option>`);\n                        });\n                    }\n                }\n            });\n                \n                  \n\n\n            // Popola la tabella dei dipendenti\n            populateEmployeeTable(wrapper, '#tabella_dipendenti', '#filtro_dipendenti');\n\n            // Gestisce il click sul pulsante Salva\n            wrapper.find('#salva_formazione').on('click', function() {\n                let corso_formazione = wrapper.find('#corso_formazione').val();\n                let formazione_ecopan = wrapper.find('#formazione_ecopan').is(':checked');\n                let data_formazione = wrapper.find('#data_formazione').val();\n                 let data_scadenza = wrapper.find('#data_scadenza').val();\n                let descrizione = wrapper.find('#descrizione').val();\n                let fun = \"formazione\";\n                let dipendenti_selezionati = [];\n                wrapper.find('.seleziona-dipendente:checked').each(function() {\n                    let tr = $(this).closest('tr');\n                    dipendenti_selezionati.push({\n                        name: tr.data('name'),\n                        parent: tr.data('parent')\n                    });\n                });\n                \n                if (!corso_formazione || !data_formazione ||!data_scadenza || dipendenti_selezionati.length === 0) {\n                    frappe.msgprint(__('Seleziona un corso, dipendenti e inserisci una data!'));\n                    return;\n                }\n\n                // Salvataggio\n                frappe.call({\n                    method: 'insert_visit_formazione',\n                    args: {\n                        fun:fun,\n                        corso_formazione: corso_formazione,\n                        formazione_ecopan: formazione_ecopan,\n                        data_formazione: data_formazione,\n                        data_scadenza: data_scadenza,\n                        descrizione: descrizione,\n                        dipendenti_selezionati: dipendenti_selezionati\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            frappe.msgprint(__('Dati salvati con successo!'));\n                            frm.refresh();\n                        }\n                    }\n                });\n            });\n        } else {\n            console.log(\"Campo 'file_formazione' non trovato.\");\n        }\n\n        // Aggiungi il form 'file_visite'\n        if (wrapperV) {\n            console.log(\"Campo 'file_visite' trovato.\");\n            if (wrapperV.find('form').length === 0) {\n                console.log(\"Form HTML non trovato, lo stiamo aggiungendo.\");\n                wrapperV.html(`\n                    <form id=\"form_visite\">\n                        <div>\n                            <button type=\"button\" id=\"salva_visite\" class=\"btn btn-primary\">Salva</button>\n                        </div> \n\n                        <div style=\"padding: 15px;\">\n                            <h2>Visita Medica</h2>\n                            <div>\n                                <label for=\"data_visita\">Data Visita:</label>\n                                <input type=\"date\" id=\"data_visita\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"data_scadenza\">Data Scadenza:</label>\n                                <input type=\"date\" id=\"data_scadenza\" class=\"form-control\">\n                            </div>\n                            <div>\n                                <label for=\"annotazioni_visita\">Annotazioni Visita:</label>\n                                <textarea id=\"annotazioni_visita\" class=\"form-control\" rows=\"3\" placeholder=\"Annotazioni\"></textarea>\n                            </div>\n                        </div>\n\n                        <div> \n                            <div>\n                                <label for=\"filtro_dipendentiV\">Filtro Dipendenti:</label>\n                                <input type=\"text\" id=\"filtro_dipendentiV\" class=\"form-control\" placeholder=\"Filtra per nome o cognome\">\n                            </div>\n                            <label>Dipendenti:</label>\n                            <table id=\"tabella_dipendentiV\" class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>Seleziona</th>\n                                        <th>Nome</th>\n                                        <th>Cognome</th>\n                                    </tr>\n                                </thead>\n                                <tbody></tbody>\n                            </table>\n                        </div>\n                    </form>\n                `);\n            } else {\n                console.log(\"Il form HTML è già stato aggiunto.\");\n            }\n\n            // Popola la tabella dei dipendenti\n            populateEmployeeTable(wrapperV, '#tabella_dipendentiV', '#filtro_dipendentiV');\n\n            // Gestisce il click sul pulsante Salva\n            wrapperV.find('#salva_visite').on('click', function() {\n                let data_visita = wrapperV.find('#data_visita').val();\n                let data_scadenza = wrapperV.find('#data_scadenza').val();\n                let annotazioni_visita = wrapperV.find('#annotazioni_visita').val();\n                let fun = \"visite\";\n                let dipendenti_selezionati = [];\n                wrapperV.find('.seleziona-dipendente:checked').each(function() {\n                    let tr = $(this).closest('tr');\n                    dipendenti_selezionati.push({\n                        name: tr.data('name'),\n                        parent: tr.data('parent')\n                    });\n                });\n\n                if (!data_visita || !data_scadenza || dipendenti_selezionati.length === 0) {\n                    frappe.msgprint(__('Seleziona dipendenti e inserisci le date!'));\n                    return;\n                }\n\n                // Salvataggio\n                frappe.call({\n                    method: 'insert_visit_formazione',\n                    args: {\n                        fun:fun,\n                        data_visita: data_visita,\n                        data_scadenza: data_scadenza,\n                        annotazioni_visita: annotazioni_visita,\n                        dipendenti_selezionati: dipendenti_selezionati\n                    },\n                    callback: function(r) {\n                        if (r.message) {\n                            frappe.msgprint(__('Visita salvata con successo!'));\n                            frm.refresh();\n                        }\n                    }\n                });\n            });\n        } else {\n            console.log(\"Campo 'file_visite' non trovato.\");\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2024-12-20 12:56:21.801349",
  "module": "EcopanCRM",
  "name": "Button_Insert_Dipendenti",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        // Inserisci il form nel campo HTML\n        frm.fields_dict.html_form.$wrapper.html(`\n            <div style=\"margin: 5px;padding: 15px;\">\n                <label for=\"num_dipendenti\">Numero Dipendenti:</label><br>\n                <input type=\"number\" id=\"num_dipendenti\" class=\"form-control\" style=\"width: 200px; display: inline-block; margin-right: 10px;\">\n                <button class=\"btn btn-primary\" id=\"crea_dipendenti\">Genera Dipendenti</button>\n            </div>\n        `);\n\n        // Aggiungi l'evento click al pulsante\n        frm.fields_dict.html_form.$wrapper.find('#crea_dipendenti').on('click', function() {\n            const num_dipendenti = frm.fields_dict.html_form.$wrapper.find('#num_dipendenti').val();\n\n            if (!num_dipendenti || num_dipendenti <= 0) {\n                frappe.msgprint(__('Inserisci un numero valido di dipendenti.'));\n                return;\n            }\n\n            frappe.call({\n                method: 'insert_empty_dipendenti',\n                args: {\n                    customer: frm.doc.name,\n                    num_dipendenti: num_dipendenti\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        frappe.msgprint(__('Dipendenti creati con successo!'));\n                        frm.reload_doc();\n                    }\n                }\n            });\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2024-12-13 10:06:26.683685",
  "module": "EcopanCRM",
  "name": "Viste Formazione e visite",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        if (!frm.is_new()) {\n            frm.add_custom_button(__('Carica Dati Dipendenti'), function() {\n                if (!frm.doc.name) {\n                    frappe.msgprint(__('Cliente non selezionato.'));\n                    console.log('Errore: cliente non selezionato.');\n                    return;\n                }\n\n                console.log(`Caricamento dati per il cliente: ${frm.doc.name}`);\n\n                // Ottieni i dati tramite chiamata server-side\n                frappe.call({\n                    method: 'vw_visite_formazione', // Metodo server-side\n                    args: {\n                        customer: frm.doc.name\n                    },\n                    callback: function(response) {\n                        if (response.message) {\n                            // Log dei dati ricevuti\n                            console.log('Dati ricevuti:', response.message);\n\n                            const data = response.message;\n\n                            // Genera HTML per la tabella formazione\n                            let formazione_html = '<table class=\"table table-bordered\"><thead><tr><th>Dipendente</th><th>Corso</th><th>Formazione Ecopan</th><th>Data</th><th>Descrizione</th></tr></thead><tbody>';\n                            let visite_html = '<table class=\"table table-bordered\"><thead><tr><th>Dipendente</th><th>Data Visita</th><th>Data Scadenza</th><th>Annotazioni</th></tr></thead><tbody>';\n\n                            // Costruisci le righe della tabella\n                            data.forEach(employee => {\n                                // Dati Formazione\n                                if (employee.file_formazione) {\n                                    employee.file_formazione.forEach(file => {\n                                        formazione_html += `\n                                            <tr>\n                                                <td>${employee.first_name} ${employee.last_name}</td>\n                                                <td>${file.corso_formazione}</td>\n                                                <td>${file.formazione_ecopan}</td>\n                                                <td>${file.data_formazione}</td>\n                                                <td>${file.descrizione}</td>\n                                            </tr>`;\n                                    });\n                                } else {\n                                    console.log(`Nessun dato di formazione per: ${employee.first_name} ${employee.last_name}`);\n                                }\n\n                                // Dati Visite Mediche\n                                if (employee.visita_medica) {\n                                    employee.visita_medica.forEach(visit => {\n                                        visite_html += `\n                                            <tr>\n                                                <td>${employee.first_name} ${employee.last_name}</td>\n                                                <td>${visit.data_visita}</td>\n                                                <td>${visit.data_scadenza}</td>\n                                                <td>${visit.annotazioni_visita}</td>\n                                            </tr>`;\n                                    });\n                                } else {\n                                    console.log(`Nessun dato di visite mediche per: ${employee.first_name} ${employee.last_name}`);\n                                }\n                            });\n\n                            formazione_html += '</tbody></table>';\n                            visite_html += '</tbody></table>';\n\n                            // Inserisci i contenuti HTML nei campi specifici\n                            frm.fields_dict.table_formazione.$wrapper.html(formazione_html);\n                            frm.fields_dict.table_visite.$wrapper.html(visite_html);\n\n                            console.log('Tabelle HTML aggiornate con successo.');\n                            frappe.msgprint(__('Dati caricati con successo.'));\n                        } else {\n                            console.log('Nessun dato trovato per il cliente selezionato.');\n                            frappe.msgprint(__('Nessun dato trovato per il cliente selezionato.'));\n                        }\n                    }\n                });\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan DVR",
  "enabled": 1,
  "modified": "2024-12-13 13:39:35.533275",
  "module": "EcopanCRM",
  "name": "Insert_Nome_Azienda",
  "script": "frappe.ui.form.on('Ecopan DVR', {\n    after_save: function(frm) {\n            console.log(\"after_save triggered\"); // Debug iniziale\n            if (frm.doc.client) {\n                console.log(\"Client field value:\", frm.doc.client); // Verifica il valore di client\n                \n                frappe.call({\n                    method: 'frappe.client.get',\n                    args: {\n                        doctype: 'Ecopan Customer',\n                        name: frm.doc.client\n                    },\n                    callback: function(r) {\n                        console.log(\"frappe.call response:\", r); // Log della risposta\n                        if (r.message) {\n                            console.log(\"Customer Name retrieved:\", r.message.customer_name); // Verifica il valore recuperato\n                            \n                            // Aggiorna il campo\n                            frm.set_value('customer_name', r.message.customer_name);\n    \n                            // Salva nuovamente il documento\n                            frm.save();\n                        } else {\n                            console.error(\"No message in response or customer not found\"); // Log di errore\n                        }\n                    },\n                    error: function(err) {\n                        console.error(\"Error in frappe.call:\", err); // Log degli errori\n                    }\n                });\n            } else {\n                console.error(\"Client field is empty\"); // Log nel caso il campo client sia vuoto\n            }\n        }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:43:43.542657",
  "module": "EcopanCRM",
  "name": "Filter_Employee_Branch",
  "script": "frappe.ui.form.on('Ecopan Employee', {\n    refresh: function(frm) {\n        console.log('Parent Name (Ecopan Customer):', frm.doc.name);\n\n        // Configura il filtro per il campo branch\n        frm.set_query('branch', function() {\n            const filters = { parent: frm.doc.name };\n            console.log('Branch filters:', filters); // Debug\n            return { filters: filters };\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:44:46.218748",
  "module": "EcopanCRM",
  "name": "Custome_HACCP_View",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n\trefresh(frm) {\n\t // Chiamata API al Server Script\n        frappe.call({\n            method: 'haccp_View',\n            args: { client: frm.doc.name }, // Passa il nome del documento come argomento\n             callback: function (r) {\n                if (r.message) {\n                    console.log('Campi disponibili:', frm.fields_dict);\n                    console.log('Dati ricevuti dal server:', r.message);\n                    // Converte i dati in una tabella HTML\n                    const table = `\n                        <a href=\"/app/ecopan-haccp/new-ssp?client=${encodeURIComponent(frm.doc.name)}\" \n                           class=\"btn btn-primary\" \n                           style=\"margin-bottom: 10px;\">\n                            Crea Nuova HACCP\n                        </a>\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>N° HACCP</th>\n                                    <th>Data Creazione</th>\n                                    <th>Data Revisione</th>\n                                    <th>Sede</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                ${r.message.map(row => `\n                                    <tr>\n                                        <td><b><a href=\"/app/ecopan-haccp/${row.name}\" target=\"_blank\">\n                                                ${row.name || 'N/A'}\n                                            </a></b></td>\n                                        <td>${row.creation_date}</td>\n                                        <td>${row.expiry_date}</td>\n                                        <td>${row.branch}</td>\n                                    </tr>\n                                `).join('')}\n                            </tbody>\n                        </table>\n                    `;\n\n                    // Inserisci la tabella in un campo HTML\n                   frm.fields_dict['vista_html_haccp'].$wrapper.html(table);\n                } else {\n                    frm.fields_dict['vista_html_haccp'].html('<p>Nessun dato trovato.</p>');\n                }\n            }\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan HACCP",
  "enabled": 1,
  "modified": "2024-12-20 12:45:19.909278",
  "module": "EcopanCRM",
  "name": "Insert_Nome_Azienda_HACCP",
  "script": "frappe.ui.form.on('Ecopan HACCP', {\n after_save: function(frm) {\n            console.log(\"after_save triggered\"); // Debug iniziale\n            if (frm.doc.client) {\n                console.log(\"Client field value:\", frm.doc.client); // Verifica il valore di client\n                \n                frappe.call({\n                    method: 'frappe.client.get',\n                    args: {\n                        doctype: 'Ecopan Customer',\n                        name: frm.doc.client\n                    },\n                    callback: function(r) {\n                        console.log(\"frappe.call response:\", r); // Log della risposta\n                        if (r.message) {\n                            console.log(\"Customer Name retrieved:\", r.message.customer_name); // Verifica il valore recuperato\n                            \n                            // Aggiorna il campo\n                            frm.set_value('customer_name', r.message.customer_name);\n    \n                            // Salva nuovamente il documento\n                            frm.save();\n                        } else {\n                            console.error(\"No message in response or customer not found\"); // Log di errore\n                        }\n                    },\n                    error: function(err) {\n                        console.error(\"Error in frappe.call:\", err); // Log degli errori\n                    }\n                });\n            } else {\n                console.error(\"Client field is empty\"); // Log nel caso il campo client sia vuoto\n            }\n        }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan HACCP",
  "enabled": 1,
  "modified": "2024-12-20 14:25:43.441325",
  "module": "EcopanCRM",
  "name": "List_Branch_HACCP",
  "script": "frappe.ui.form.on('Ecopan HACCP', {\n    refresh: function(frm) {\n                if (!frm.is_new()) {\n                frm.set_df_property('client', 'read_only', 1);\n                }\n        // Controlla se il campo client è già compilato quando viene caricato il form\n        if (frm.doc.client) {\n           // console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    },\n    client: function(frm) {\n        // Quando il campo client viene selezionato o cambia\n        if (frm.doc.client) {\n          //  console.log(\"Cliente selezionato: \" + frm.doc.client);\n            fetch_branches(frm);\n        }\n    }\n});\n\nfunction fetch_branches(frm) {\n    frappe.call({\n        method: 'list_branch',  // Assicurati di avere il percorso corretto se necessario\n        args: {\n            client: frm.doc.client\n        },\n        callback: function(response) {\n            var branches = response.message;\n         //  console.log(response.opt);\n\n            if (branches) {\n                let options = branches.map(branch => branch.branch_name).join(\"\\n\");\n                frm.set_df_property('branch', 'options', options);  // Imposta le opzioni del campo 'branch'\n              \n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 1,
  "modified": "2025-03-08 15:46:29.832601",
  "module": "EcopanCRM",
  "name": "Formazione_VisiteMediche",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n    refresh: function(frm) {\n        if (!frm.is_new()) {\n            \n            const filterContainer = `\n                <div class=\"filter-area\" style=\"margin-bottom: 15px;\">\n                    <h5 style=\"color: #9a9999;\">Filtri per dipendenti</h5>\n                    <input type=\"text\" placeholder=\"Nome\" class=\"filter-first-nameF form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                    <input type=\"text\" placeholder=\"Cognome\" class=\"filter-last-nameF form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                    <input type=\"date\" class=\"filter-dateF form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\" placeholder=\"Data Formazione (<=)\">\n                    <select class=\"filter-courseF form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                        <option value=\"\">Corso di Formazione</option>\n                    </select>\n                    <button id=\"apply_filter\" class=\"btn btn-primary\" style=\"margin-left: 10px;\">Applica Filtri</button>\n                    <button id=\"clear_filters\" class=\"btn btn-secondary\">Rimuovi Filtri</button>\n                    <hr style=\"border: 1px solid #f3f3f3; width: 100%;\">\n                </div>\n            `;\n            const filterContainerV = `\n                <div class=\"filter-areaV\" style=\"margin-bottom: 15px;\">\n                    <h5 style=\"color: #9a9999;\">Filtri per dipendenti</h5>\n                    <input type=\"text\" placeholder=\"Nome\" class=\"filter-first-nameV form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                    <input type=\"text\" placeholder=\"Cognome\" class=\"filter-last-nameV form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\">\n                    <input type=\"date\" class=\"filter-dateV form-control\" style=\"margin-right: 10px; display: inline-block; width: 150px;\" placeholder=\"Data Formazione (<=)\">\n                    <button id=\"apply_filterV\" class=\"btn btn-primary\" style=\"margin-left: 10px;\">Applica Filtri</button>\n                    <button id=\"clear_filtersV\" class=\"btn btn-secondary\">Rimuovi Filtri</button>\n                    <hr style=\"border: 1px solid #f3f3f3; width: 100%;\">\n                </div>\n            `;\n            \n            // Assicurati che il contenitore dei filtri sia presente\n            if (!frm.fields_dict.div_html_formazione.wrapper.querySelector('.filter-area')) {\n                frm.fields_dict.div_html_formazione.wrapper.innerHTML = filterContainer;\n            }\n            \n            if (!frm.fields_dict.div_html_visitemediche.wrapper.querySelector('.filter-areaV')) {\n                frm.fields_dict.div_html_visitemediche.wrapper.innerHTML = filterContainerV;\n            }\n            // Popola la combo dei corsi di formazione\n                 frappe.call({\n                    method: 'get_all_formazione',\n                    callback: function(response) {\n                        if (response.message) {\n                            const select = document.querySelector('.filter-courseF');\n                            response.message.forEach(function(item) {\n                                const option = document.createElement('option');\n                                option.value = item.corso_formazione;  // Accesso al campo corso_formazione\n                                option.textContent = item.corso_formazione;  // Visualizzazione del valore\n                                select.appendChild(option);\n                            });\n                        }\n                    }\n                });\n\n\n            // Applicazione dei filtri\n            document.getElementById('apply_filter').addEventListener('click', function() {\n                // Debug: controlla i valori dei filtri \n                console.log('Nome:', document.querySelector('.filter-first-nameF').value);\n                console.log('Cognome:', document.querySelector('.filter-last-nameF').value);\n                console.log('Data Formazione:', document.querySelector('.filter-dateF').value);\n                console.log('Corso Formazione:', document.querySelector('.filter-courseF').value);\n\n                frappe.call({\n                    method: 'get_formazione_employee',\n                    args: {\n                        customer_id: frm.doc.name,\n                        first_name: document.querySelector('.filter-first-nameF').value,\n                        last_name: document.querySelector('.filter-last-nameF').value,\n                        date_formazione: document.querySelector('.filter-dateF').value,\n                        corso_formazione: document.querySelector('.filter-courseF').value\n                    },\n                    callback: function(response) {\n                        const container = frm.fields_dict.div_html_formazione.wrapper;\n                        let content = `\n                            <table class=\"table table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th>Nome</th>\n                                        <th>Cognome</th>\n                                        <th>Corso di Formazione</th>\n                                        <th>Data Formazione</th>\n                                        <th>Descrizione</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                        `;\n                        response.message.forEach(function(item) {\n                            content += `\n                                <tr>\n                                    <td>${item.first_name} ${item.last_name}</td>\n                                    <td>${item.last_name}</td>\n                                    <td>${item.corso_formazione}</td>\n                                    <td>${item.data_formazione}</td>\n                                    <td>${item.descrizione}</td>\n                                </tr>`;\n                        });\n                        content += '</tbody></table>';\n                        // Aggiungi i risultati della ricerca nella tabella\n                        container.querySelector('.employee-formazione')?.remove();\n                        const resultsDiv = document.createElement('div');\n                        resultsDiv.classList.add('employee-formazione');\n                        resultsDiv.innerHTML = content;\n                        container.appendChild(resultsDiv);\n                    }\n                });\n            });\n\n            // Applicazione dei filtri\ndocument.getElementById('apply_filterV').addEventListener('click', function() {\n    // Debug: controlla i valori dei filtri \n    console.log('Nome:', document.querySelector('.filter-first-nameV').value);\n    console.log('Cognome:', document.querySelector('.filter-last-nameV').value);\n    console.log('Data Visita:', document.querySelector('.filter-dateV').value);\n\n    frappe.call({\n        method: 'get_medical_employee',  // Metodo server-side corretto\n        args: {\n            customer_id: frm.doc.name,\n            first_name: document.querySelector('.filter-first-nameV').value,\n            last_name: document.querySelector('.filter-last-nameV').value,\n            date_visita: document.querySelector('.filter-dateV').value || '1900-12-31'  // Valore predefinito\n        },\n        callback: function(response) {\n            const container = frm.fields_dict.div_html_visitemediche.wrapper;\n            let content = `\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Nome</th>\n                            <th>Cognome</th>\n                            <th>Data Visita</th>\n                            <th>Data Scadenza</th>\n                            <th>Annotazioni Visita</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n            `;\n            response.message.forEach(function(item) {\n                content += `\n                    <tr>\n                        <td>${item.first_name} ${item.last_name}</td>\n                        <td>${item.last_name}</td>\n                        <td>${item.data_visita}</td>\n                        <td>${item.data_scadenza}</td>\n                        <td>${item.annotazioni_visita}</td>\n                    </tr>`;\n            });\n            content += '</tbody></table>';\n            // Aggiungi i risultati della ricerca nella tabella\n            container.querySelector('.employee-visite-mediche')?.remove();\n            const resultsDiv = document.createElement('div');\n            resultsDiv.classList.add('employee-visite-mediche');\n            resultsDiv.innerHTML = content;\n            container.appendChild(resultsDiv);\n        }\n    });\n});\n\n\n            // Rimozione dei filtri\n            document.getElementById('clear_filters').addEventListener('click', function() {\n                document.querySelector('.filter-first-nameF').value = '';\n                document.querySelector('.filter-last-nameF').value = '';\n                document.querySelector('.filter-dateF').value = '';\n                document.querySelector('.filter-courseF').value = '';\n                const resultsDiv = document.querySelector('.employee-formazione');\n                if (resultsDiv) resultsDiv.innerHTML = '';\n            });\n            \n            // Rimozione dei filtri\n            document.getElementById('clear_filtersV').addEventListener('click', function() {\n                document.querySelector('.filter-first-nameV').value = '';\n                document.querySelector('.filter-last-nameV').value = '';\n                document.querySelector('.filter-dateV').value = '';\n                const resultsDiv = document.querySelector('.employee-formazione');\n                if (resultsDiv) resultsDiv.innerHTML = '';\n            });\n            \n            \n            \n            \n            \n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan HACCP",
  "enabled": 1,
  "modified": "2025-01-14 19:10:34.164144",
  "module": "EcopanCRM",
  "name": "Nomine_Haccp",
  "script": "frappe.ui.form.on('Ecopan HACCP', {\n    refresh: function(frm) {\n        // Controlla se il campo 'client' è valorizzato\n        console.log(\"Client value: \", frm.doc.client);\nfrm.set_df_property('vista_figurehaccp', 'options', '');  // Pulisce il contenuto\n        mostraTabelle(frm);  // Chiama la funzione per mostrare le tabelle\n    },\n    client: function(frm) {\n        // Controlla se il campo 'client' è valorizzato\n        console.log(\"Client changed: \", frm.doc.client);\n        mostraTabelle(frm);  // Ricarica le tabelle quando il client cambia\n    }\n});\n\nfunction mostraTabelle(frm) {\n    var client = frm.doc.client;  // Ottieni il valore del campo 'client'\n\n    if (client) {\n        // Chiama il server per ottenere i dati\n        frappe.call({\n            method: 'nomine_haccp',\n            args: {\n                'client': client\n            },\n            callback: function(r) {\n                if (!r.exc) {\n                    var htmlContent = '';\n\n                    // Controlla i dati ricevuti e crea la struttura HTML\n                    if (r.message_responsabile_haccp && r.message_responsabile_haccp.length > 0) {\n                        htmlContent += creaTabella(r.message_responsabile_haccp, 'Responsabile HACCP','data_responsabile_haccp');\n                    }\n                    if (r.message_delega_haccp && r.message_delega_haccp.length > 0) {\n                        htmlContent += creaTabella(r.message_delega_haccp, 'Delegato HACCP','data_delega_haccp');\n                    }\n                    \n                    // Imposta il contenuto HTML nel campo 'vista_figuresicurezza'\n                    frm.set_df_property('vista_figurehaccp', 'options', htmlContent);\n                }\n            }\n        });\n    }\n}\n\nfunction creaTabella(dati, titolo,field_data) {\n    // Crea la struttura HTML per una tabella\n    var tableHtml = '<h4>' + titolo + '</h4>';\n    tableHtml += '<table class=\"table table-bordered\"><thead><tr>';\n    tableHtml += '<th>Nome</th><th>Cognome</th><th>Ruolo</th><th>Stato impiego</th><th>Data Nomina</th>';\n    tableHtml += '</tr></thead><tbody>';\n\n    // Aggiungi le righe per ogni dipendente\n    dati.forEach(function(dipendente) {\n        tableHtml += '<tr>';\n        tableHtml += '<td>' + dipendente.first_name + '</td>';\n        tableHtml += '<td>' + dipendente.last_name + '</td>';\n        tableHtml += '<td>' + dipendente.current_job_title + '</td>';\n        tableHtml += '<td>' + dipendente.employment_status + '</td>';\n        tableHtml += '<td>' + dipendente[field_data] + '</td>';\n        tableHtml += '</tr>';\n    });\n\n    tableHtml += '</tbody></table>';\n    return tableHtml;\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2025-01-31 11:36:47.796535",
  "module": "EcopanCRM",
  "name": "select branch",
  "script": "frappe.ui.form.on(\"Ecopan Employee\", {\n    refresh: function(frm) {\n        // Verifica che il form sia in un contesto valido (tabella figlia)\n        if (frm.is_new()) return;\n\n        // Chiama il metodo Python per ottenere le filiali\n        frappe.call({\n            method: \"get_branch_client\",\n            args: {\n                customer: frm.doc.parent  // Passa il cliente genitore\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Aggiorna le opzioni del campo Select\n                    frm.set_df_property('select_branch', 'options', r.message);\n                    frm.refresh_field('select_branch');\n                }\n            }\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ecopan Customer",
  "enabled": 0,
  "modified": "2025-03-08 15:33:10.913883",
  "module": "EcopanCRM",
  "name": "Clear_Set_Dirty_OnSave",
  "script": "frappe.ui.form.on('Ecopan Customer', {\n\n\trefresh(frm) {\n        if (frm.is_dirty()) {\n                            frm.save();\n                            }\n    \n\t}\n})",
  "view": "Form"
 }
]